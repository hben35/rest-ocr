captainVersion: 4
services:
  ocr-api:
    image: jitesoft/tesseract-ocr:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      TESSDATA_PREFIX: /usr/share/tesseract-ocr/4.00/tessdata
      TESSERACT_DATA_LANGS: fra
    ports:
      - "8000:5000"
    restart: always
    caproverExtra:
      containerHttpPort: '5000'

caproverOneClickApp:
  variables:
    - id: TESSDATA_PREFIX
      label: Tesseract Data Path
      defaultValue: "/usr/share/tesseract-ocr/4.00/tessdata"
      description: Path to Tesseract data files
    - id: TESSERACT_DATA_LANGS
      label: OCR Language
      defaultValue: "fra"
      description: Set OCR language (default is French)

  instructions:
    start: >-
      This application runs a Flask REST API that accepts images via URL or base64 and returns the extracted text using Tesseract OCR.
    end: >-
      Your service is available at http://$$cap_appname.$$cap_root_domain/ocr. 
      To test, send a POST request with either a `img_url` or `img_base64` field in JSON format.
    displayName: 'Tesseract OCR API'
    isOfficial: false
    description: A simple REST API for OCR using Tesseract.
    documentation: >-
      You can test the API by sending a POST request with a URL to an image or a base64-encoded image:
      
      POST /ocr
      Body:
      {
        "img_url": "http://example.com/image.png"
      }
      OR
      {
        "img_base64": "<base64_encoded_image>"
      }
      
      The response will contain the extracted text from the image.
